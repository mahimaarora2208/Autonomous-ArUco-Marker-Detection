#!/usr/bin/env python
import rospy
from fiducial_msgs.msg import FiducialTransformArray


class FiducialSubscriber:
    """
    A subscriber class to read messages from the fiducial_transforms topic.

    Attributes:
        _anonymous (bool): flag to create an anonymous node
        _robot_name (str): Name of the robot

    """
    def __init__(self, anonymous=False):
        """
        Initialize object attributes.

        Args:
            anonymous: Flag to check whether or not we need to create 
            anonymous nodes.
            anonymous=True will give a unique id to the node
            anonymous=True allows you to create multiple instances of this node

        Returns:
            None
        """
        self._anonymous = anonymous
        self._robot_name = "waffle"
        rospy.init_node("fiducial_subscriber", anonymous=self._anonymous)
        rospy.Subscriber("fiducial_transforms", FiducialTransformArray, self.callback)
        # setup subscribers and callbacks
        rospy.spin()


    def callback(self, msg):
        """
         
        Args:
            msg:
        """
        return_val = []
        if msg.transforms:
            for m in msg.transforms:
                x_pos = m.transform.translation.x
                y_pos = m.transform.translation.y
                z_pos = m.transform.translation.z
                x_rot = m.transform.rotation.x
                y_rot = m.transform.rotation.y
                z_rot = m.transform.rotation.z
                w_rot = m.transform.rotation.w
                rospy.loginfo("Pose for {}: [{},{},{}] [{},{},{},{}]"
                        .format(self._robot_name, x_pos, y_pos, z_pos, x_rot, y_rot, z_rot, w_rot))
     
        else:
            rospy.loginfo('ArUco marker not detected yet....Searching...')


if __name__ == "__main__":
    sub = FiducialSubscriber()